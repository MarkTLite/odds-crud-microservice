# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import odds_crud_pb2 as odds__crud__pb2


class OddsCrudStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateOdds = channel.unary_unary(
                '/OddsCrud/CreateOdds',
                request_serializer=odds__crud__pb2.DataDict.SerializeToString,
                response_deserializer=odds__crud__pb2.DBResponse.FromString,
                )
        self.ReadOdds = channel.unary_stream(
                '/OddsCrud/ReadOdds',
                request_serializer=odds__crud__pb2.DataDict.SerializeToString,
                response_deserializer=odds__crud__pb2.DBResponse.FromString,
                )
        self.UpdateOdds = channel.unary_unary(
                '/OddsCrud/UpdateOdds',
                request_serializer=odds__crud__pb2.DataDict.SerializeToString,
                response_deserializer=odds__crud__pb2.DBResponse.FromString,
                )
        self.DeleteOdds = channel.unary_unary(
                '/OddsCrud/DeleteOdds',
                request_serializer=odds__crud__pb2.DataDict.SerializeToString,
                response_deserializer=odds__crud__pb2.DBResponse.FromString,
                )


class OddsCrudServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreateOdds(self, request, context):
        """A simple RPC for creating odds 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReadOdds(self, request, context):
        """A simple RPC for reag odds 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateOdds(self, request, context):
        """A simple RPC for Updating odds 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteOdds(self, request, context):
        """A simple RPC for deleting odds 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_OddsCrudServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateOdds': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateOdds,
                    request_deserializer=odds__crud__pb2.DataDict.FromString,
                    response_serializer=odds__crud__pb2.DBResponse.SerializeToString,
            ),
            'ReadOdds': grpc.unary_stream_rpc_method_handler(
                    servicer.ReadOdds,
                    request_deserializer=odds__crud__pb2.DataDict.FromString,
                    response_serializer=odds__crud__pb2.DBResponse.SerializeToString,
            ),
            'UpdateOdds': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateOdds,
                    request_deserializer=odds__crud__pb2.DataDict.FromString,
                    response_serializer=odds__crud__pb2.DBResponse.SerializeToString,
            ),
            'DeleteOdds': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteOdds,
                    request_deserializer=odds__crud__pb2.DataDict.FromString,
                    response_serializer=odds__crud__pb2.DBResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'OddsCrud', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class OddsCrud(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateOdds(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/OddsCrud/CreateOdds',
            odds__crud__pb2.DataDict.SerializeToString,
            odds__crud__pb2.DBResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReadOdds(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/OddsCrud/ReadOdds',
            odds__crud__pb2.DataDict.SerializeToString,
            odds__crud__pb2.DBResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateOdds(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/OddsCrud/UpdateOdds',
            odds__crud__pb2.DataDict.SerializeToString,
            odds__crud__pb2.DBResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteOdds(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/OddsCrud/DeleteOdds',
            odds__crud__pb2.DataDict.SerializeToString,
            odds__crud__pb2.DBResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
